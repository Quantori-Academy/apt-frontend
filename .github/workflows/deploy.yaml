name: Deploy apt-frontend

on: workflow_dispatch
# on:
#   push:
#     branches:
#       - main

jobs:
    install-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                node-version: '20' # Specify the Node.js version you want to use

            # - name: Run lint
            #   run: npm run lint

            # - name: Run tests
            #   run: npm run test

            - name: Install OpenVPN
              run: |
                sudo apt update
                sudo apt install -y openvpn openvpn-systemd-resolved

            - name: Checkout code
              uses: actions/checkout@v4
              with:
                path: apt-frontend

            - name: Connect to VPN
              uses: "kota65535/github-openvpn-connect-action@v2"
              with:
                config_file: ./apt-frontend/.github/workflows/client.ovpn

            - name: Copy code to VM
              env:
                SSH_KEY: ${{secrets.SSH_KEY}}
                SSH_USER: ${{secrets.SSH_USER}}
                VM_IP: ${{vars.VM_IP}}
              run: |
                echo "${SSH_KEY}" >> /tmp/ssh_key
                chmod 400 /tmp/ssh_key
                ssh -o KexAlgorithms=ecdh-sha2-nistp521 -o 'StrictHostKeyChecking no' -i /tmp/ssh_key ${SSH_USER}@${VM_IP} 'rm -rf ~/apt-frontend/*'
                scp -v -o KexAlgorithms=ecdh-sha2-nistp521 -o 'StrictHostKeyChecking no' -i /tmp/ssh_key -r ./apt-frontend ${SSH_USER}@$VM_IP:~

            - name: Run latest version
              uses: appleboy/ssh-action@v1.0.3
              with:
                host: ${{ vars.VM_IP }}
                username: ${{ secrets.SSH_USER }}
                cipher: ecdh-sha2-nistp521
                key: ${{secrets.SSH_KEY}}
                script: |
                  cd ~/apt-frontend
                  sudo docker compose down
                  sudo docker compose build
                  sudo docker compose up -d
                  rm -rf ./.git
